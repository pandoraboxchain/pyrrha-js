/**
 * Errors definition and helpers
 * This file it is a part of the Pandora Pyrrha Javascript library
 * 
 * @file errors.js
 * @author Kostiantyn Smyrnov <kostysh@gmail.com>
 * @date 2018
 */
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.PJS_REQUIRED = exports.EXPECT_TYPE_OPTIONS_REQUIRED = exports.EXPECT_NOT_A_MEMBER = exports.FAILURE_EVENT = exports.TRANSACTION_UNSUCCESSFUL = exports.WEB3_METAMASK_REQUIRED = exports.IPFS_NOT_CONNECTED = exports.IPFS_REQUIRED = exports.CONTRACT_REQUIRED = exports.WEB3_CONNECTION_TIMEOUT = exports.WEB3_NOT_CONNECTED = exports.WEB3_REQUIRED = exports.ADDRESS_REQUIRED = exports.WRONG_TYPE = exports.OPTIONS_REQUIRED = void 0;
var OPTIONS_REQUIRED = 'OPTIONS_REQUIRED';
exports.OPTIONS_REQUIRED = OPTIONS_REQUIRED;
var WRONG_TYPE = 'WRONG_TYPE';
exports.WRONG_TYPE = WRONG_TYPE;
var ADDRESS_REQUIRED = 'ADDRESS_REQUIRED';
exports.ADDRESS_REQUIRED = ADDRESS_REQUIRED;
var WEB3_REQUIRED = 'WEB3_REQUIRED';
exports.WEB3_REQUIRED = WEB3_REQUIRED;
var WEB3_NOT_CONNECTED = 'WEB3_NOT_CONNECTED';
exports.WEB3_NOT_CONNECTED = WEB3_NOT_CONNECTED;
var WEB3_CONNECTION_TIMEOUT = 'WEB3_CONNECTION_TIMEOUT';
exports.WEB3_CONNECTION_TIMEOUT = WEB3_CONNECTION_TIMEOUT;
var CONTRACT_REQUIRED = 'CONTRACT_REQUIRED';
exports.CONTRACT_REQUIRED = CONTRACT_REQUIRED;
var IPFS_REQUIRED = 'IPFS_REQUIRED';
exports.IPFS_REQUIRED = IPFS_REQUIRED;
var IPFS_NOT_CONNECTED = 'IPFS_NOT_CONNECTED';
exports.IPFS_NOT_CONNECTED = IPFS_NOT_CONNECTED;
var WEB3_METAMASK_REQUIRED = 'WEB3_METAMASK_REQUIRED';
exports.WEB3_METAMASK_REQUIRED = WEB3_METAMASK_REQUIRED;
var TRANSACTION_UNSUCCESSFUL = 'TRANSACTION_UNSUCCESSFUL';
exports.TRANSACTION_UNSUCCESSFUL = TRANSACTION_UNSUCCESSFUL;
var FAILURE_EVENT = 'FAILURE_EVENT';
exports.FAILURE_EVENT = FAILURE_EVENT;
var EXPECT_NOT_A_MEMBER = 'EXPECT_NOT_A_MEMBER';
exports.EXPECT_NOT_A_MEMBER = EXPECT_NOT_A_MEMBER;
var EXPECT_TYPE_OPTIONS_REQUIRED = 'EXPECT_TYPE_OPTIONS_REQUIRED';
exports.EXPECT_TYPE_OPTIONS_REQUIRED = EXPECT_TYPE_OPTIONS_REQUIRED;
var PJS_REQUIRED = 'PJS_REQUIRED';
exports.PJS_REQUIRED = PJS_REQUIRED;

var _default = function _default(code) {
  var message = 'Unknown error';

  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }

  switch (code) {
    case OPTIONS_REQUIRED:
      message = 'Config options is required and expected to be an object';
      break;

    case WRONG_TYPE:
      message = "Wrong property type. Expected '".concat(args[0], "' to be: '").concat(args[1], "', but got: '").concat(args[2], "'");
      break;

    case WEB3_REQUIRED:
      message = 'Web3 API required';
      break;

    case WEB3_NOT_CONNECTED:
      message = 'Web3 not connected to provider';
      break;

    case WEB3_CONNECTION_TIMEOUT:
      message = "Websocket connection timeout (".concat(args[0], "ms) exceeded");
      break;

    case WEB3_METAMASK_REQUIRED:
      message = 'MetaMask is required to perform this operation';
      break;

    case CONTRACT_REQUIRED:
      message = "Contract '".concat(args[0], "' is required");
      break;

    case ADDRESS_REQUIRED:
      message = "Address of '".concat(args[3] || args[0], "' is required. Wrong ethereum address: ").concat(args[2]);
      break;

    case IPFS_REQUIRED:
      message = 'IPFS API required';
      break;

    case IPFS_NOT_CONNECTED:
      message = 'No connection to IPFS server';
      break;

    case TRANSACTION_UNSUCCESSFUL:
      message = 'Transaction was unsuccessful';
      break;

    case FAILURE_EVENT:
      message = 'Contract returns an failure event';
      break;
  }

  var err = new Error(message);
  err.code = code || 'UNKNOWN';
  err.args = args;
  return err;
};

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9oZWxwZXJzL2Vycm9ycy5qcyJdLCJuYW1lcyI6WyJPUFRJT05TX1JFUVVJUkVEIiwiV1JPTkdfVFlQRSIsIkFERFJFU1NfUkVRVUlSRUQiLCJXRUIzX1JFUVVJUkVEIiwiV0VCM19OT1RfQ09OTkVDVEVEIiwiV0VCM19DT05ORUNUSU9OX1RJTUVPVVQiLCJDT05UUkFDVF9SRVFVSVJFRCIsIklQRlNfUkVRVUlSRUQiLCJJUEZTX05PVF9DT05ORUNURUQiLCJXRUIzX01FVEFNQVNLX1JFUVVJUkVEIiwiVFJBTlNBQ1RJT05fVU5TVUNDRVNTRlVMIiwiRkFJTFVSRV9FVkVOVCIsIkVYUEVDVF9OT1RfQV9NRU1CRVIiLCJFWFBFQ1RfVFlQRV9PUFRJT05TX1JFUVVJUkVEIiwiUEpTX1JFUVVJUkVEIiwiY29kZSIsIm1lc3NhZ2UiLCJhcmdzIiwiZXJyIiwiRXJyb3IiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7OztBQVNBOzs7Ozs7QUFFTyxJQUFNQSxnQkFBZ0IsR0FBRyxrQkFBekI7O0FBQ0EsSUFBTUMsVUFBVSxHQUFHLFlBQW5COztBQUNBLElBQU1DLGdCQUFnQixHQUFHLGtCQUF6Qjs7QUFDQSxJQUFNQyxhQUFhLEdBQUcsZUFBdEI7O0FBQ0EsSUFBTUMsa0JBQWtCLEdBQUcsb0JBQTNCOztBQUNBLElBQU1DLHVCQUF1QixHQUFHLHlCQUFoQzs7QUFDQSxJQUFNQyxpQkFBaUIsR0FBRyxtQkFBMUI7O0FBQ0EsSUFBTUMsYUFBYSxHQUFHLGVBQXRCOztBQUNBLElBQU1DLGtCQUFrQixHQUFHLG9CQUEzQjs7QUFDQSxJQUFNQyxzQkFBc0IsR0FBRyx3QkFBL0I7O0FBQ0EsSUFBTUMsd0JBQXdCLEdBQUcsMEJBQWpDOztBQUNBLElBQU1DLGFBQWEsR0FBRyxlQUF0Qjs7QUFDQSxJQUFNQyxtQkFBbUIsR0FBRyxxQkFBNUI7O0FBQ0EsSUFBTUMsNEJBQTRCLEdBQUcsOEJBQXJDOztBQUNBLElBQU1DLFlBQVksR0FBRyxjQUFyQjs7O2VBRVEsa0JBQUNDLElBQUQsRUFBbUI7QUFDOUIsTUFBSUMsT0FBTyxHQUFHLGVBQWQ7O0FBRDhCLG9DQUFUQyxJQUFTO0FBQVRBLElBQUFBLElBQVM7QUFBQTs7QUFHOUIsVUFBUUYsSUFBUjtBQUNJLFNBQUtmLGdCQUFMO0FBQ0lnQixNQUFBQSxPQUFPLEdBQUcseURBQVY7QUFDQTs7QUFFSixTQUFLZixVQUFMO0FBQ0llLE1BQUFBLE9BQU8sNENBQXFDQyxJQUFJLENBQUMsQ0FBRCxDQUF6Qyx1QkFBeURBLElBQUksQ0FBQyxDQUFELENBQTdELDBCQUFnRkEsSUFBSSxDQUFDLENBQUQsQ0FBcEYsTUFBUDtBQUNBOztBQUVKLFNBQUtkLGFBQUw7QUFDSWEsTUFBQUEsT0FBTyxHQUFHLG1CQUFWO0FBQ0E7O0FBRUosU0FBS1osa0JBQUw7QUFDSVksTUFBQUEsT0FBTyxHQUFHLGdDQUFWO0FBQ0E7O0FBRUosU0FBS1gsdUJBQUw7QUFDSVcsTUFBQUEsT0FBTywyQ0FBb0NDLElBQUksQ0FBQyxDQUFELENBQXhDLGlCQUFQO0FBQ0E7O0FBRUosU0FBS1Isc0JBQUw7QUFDSU8sTUFBQUEsT0FBTyxHQUFHLGdEQUFWO0FBQ0E7O0FBRUosU0FBS1YsaUJBQUw7QUFDSVUsTUFBQUEsT0FBTyx1QkFBZ0JDLElBQUksQ0FBQyxDQUFELENBQXBCLGtCQUFQO0FBQ0E7O0FBRUosU0FBS2YsZ0JBQUw7QUFDSWMsTUFBQUEsT0FBTyx5QkFBa0JDLElBQUksQ0FBQyxDQUFELENBQUosSUFBV0EsSUFBSSxDQUFDLENBQUQsQ0FBakMsb0RBQThFQSxJQUFJLENBQUMsQ0FBRCxDQUFsRixDQUFQO0FBQ0E7O0FBRUosU0FBS1YsYUFBTDtBQUNJUyxNQUFBQSxPQUFPLEdBQUcsbUJBQVY7QUFDQTs7QUFFSixTQUFLUixrQkFBTDtBQUNJUSxNQUFBQSxPQUFPLEdBQUcsOEJBQVY7QUFDQTs7QUFFSixTQUFLTix3QkFBTDtBQUNJTSxNQUFBQSxPQUFPLEdBQUcsOEJBQVY7QUFDQTs7QUFFSixTQUFLTCxhQUFMO0FBQ0lLLE1BQUFBLE9BQU8sR0FBRyxtQ0FBVjtBQUNBO0FBL0NSOztBQWtEQSxNQUFNRSxHQUFHLEdBQUcsSUFBSUMsS0FBSixDQUFVSCxPQUFWLENBQVo7QUFDQUUsRUFBQUEsR0FBRyxDQUFDSCxJQUFKLEdBQVdBLElBQUksSUFBSSxTQUFuQjtBQUNBRyxFQUFBQSxHQUFHLENBQUNELElBQUosR0FBV0EsSUFBWDtBQUNBLFNBQU9DLEdBQVA7QUFDSCxDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBFcnJvcnMgZGVmaW5pdGlvbiBhbmQgaGVscGVyc1xuICogVGhpcyBmaWxlIGl0IGlzIGEgcGFydCBvZiB0aGUgUGFuZG9yYSBQeXJyaGEgSmF2YXNjcmlwdCBsaWJyYXJ5XG4gKiBcbiAqIEBmaWxlIGVycm9ycy5qc1xuICogQGF1dGhvciBLb3N0aWFudHluIFNteXJub3YgPGtvc3R5c2hAZ21haWwuY29tPlxuICogQGRhdGUgMjAxOFxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuZXhwb3J0IGNvbnN0IE9QVElPTlNfUkVRVUlSRUQgPSAnT1BUSU9OU19SRVFVSVJFRCc7XG5leHBvcnQgY29uc3QgV1JPTkdfVFlQRSA9ICdXUk9OR19UWVBFJztcbmV4cG9ydCBjb25zdCBBRERSRVNTX1JFUVVJUkVEID0gJ0FERFJFU1NfUkVRVUlSRUQnO1xuZXhwb3J0IGNvbnN0IFdFQjNfUkVRVUlSRUQgPSAnV0VCM19SRVFVSVJFRCc7XG5leHBvcnQgY29uc3QgV0VCM19OT1RfQ09OTkVDVEVEID0gJ1dFQjNfTk9UX0NPTk5FQ1RFRCc7XG5leHBvcnQgY29uc3QgV0VCM19DT05ORUNUSU9OX1RJTUVPVVQgPSAnV0VCM19DT05ORUNUSU9OX1RJTUVPVVQnO1xuZXhwb3J0IGNvbnN0IENPTlRSQUNUX1JFUVVJUkVEID0gJ0NPTlRSQUNUX1JFUVVJUkVEJztcbmV4cG9ydCBjb25zdCBJUEZTX1JFUVVJUkVEID0gJ0lQRlNfUkVRVUlSRUQnO1xuZXhwb3J0IGNvbnN0IElQRlNfTk9UX0NPTk5FQ1RFRCA9ICdJUEZTX05PVF9DT05ORUNURUQnO1xuZXhwb3J0IGNvbnN0IFdFQjNfTUVUQU1BU0tfUkVRVUlSRUQgPSAnV0VCM19NRVRBTUFTS19SRVFVSVJFRCc7XG5leHBvcnQgY29uc3QgVFJBTlNBQ1RJT05fVU5TVUNDRVNTRlVMID0gJ1RSQU5TQUNUSU9OX1VOU1VDQ0VTU0ZVTCc7XG5leHBvcnQgY29uc3QgRkFJTFVSRV9FVkVOVCA9ICdGQUlMVVJFX0VWRU5UJztcbmV4cG9ydCBjb25zdCBFWFBFQ1RfTk9UX0FfTUVNQkVSID0gJ0VYUEVDVF9OT1RfQV9NRU1CRVInO1xuZXhwb3J0IGNvbnN0IEVYUEVDVF9UWVBFX09QVElPTlNfUkVRVUlSRUQgPSAnRVhQRUNUX1RZUEVfT1BUSU9OU19SRVFVSVJFRCc7XG5leHBvcnQgY29uc3QgUEpTX1JFUVVJUkVEID0gJ1BKU19SRVFVSVJFRCc7XG5cbmV4cG9ydCBkZWZhdWx0IChjb2RlLCAuLi5hcmdzKSA9PiB7XG4gICAgbGV0IG1lc3NhZ2UgPSAnVW5rbm93biBlcnJvcic7XG4gICAgICAgIFxuICAgIHN3aXRjaCAoY29kZSkge1xuICAgICAgICBjYXNlIE9QVElPTlNfUkVRVUlSRUQ6XG4gICAgICAgICAgICBtZXNzYWdlID0gJ0NvbmZpZyBvcHRpb25zIGlzIHJlcXVpcmVkIGFuZCBleHBlY3RlZCB0byBiZSBhbiBvYmplY3QnO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSBXUk9OR19UWVBFOlxuICAgICAgICAgICAgbWVzc2FnZSA9IGBXcm9uZyBwcm9wZXJ0eSB0eXBlLiBFeHBlY3RlZCAnJHthcmdzWzBdfScgdG8gYmU6ICcke2FyZ3NbMV19JywgYnV0IGdvdDogJyR7YXJnc1syXX0nYDtcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgV0VCM19SRVFVSVJFRDpcbiAgICAgICAgICAgIG1lc3NhZ2UgPSAnV2ViMyBBUEkgcmVxdWlyZWQnO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSBXRUIzX05PVF9DT05ORUNURUQ6XG4gICAgICAgICAgICBtZXNzYWdlID0gJ1dlYjMgbm90IGNvbm5lY3RlZCB0byBwcm92aWRlcic7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlIFdFQjNfQ09OTkVDVElPTl9USU1FT1VUOlxuICAgICAgICAgICAgbWVzc2FnZSA9IGBXZWJzb2NrZXQgY29ubmVjdGlvbiB0aW1lb3V0ICgke2FyZ3NbMF19bXMpIGV4Y2VlZGVkYDtcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgV0VCM19NRVRBTUFTS19SRVFVSVJFRDpcbiAgICAgICAgICAgIG1lc3NhZ2UgPSAnTWV0YU1hc2sgaXMgcmVxdWlyZWQgdG8gcGVyZm9ybSB0aGlzIG9wZXJhdGlvbic7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlIENPTlRSQUNUX1JFUVVJUkVEOlxuICAgICAgICAgICAgbWVzc2FnZSA9IGBDb250cmFjdCAnJHthcmdzWzBdfScgaXMgcmVxdWlyZWRgO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSBBRERSRVNTX1JFUVVJUkVEOlxuICAgICAgICAgICAgbWVzc2FnZSA9IGBBZGRyZXNzIG9mICcke2FyZ3NbM10gfHwgYXJnc1swXX0nIGlzIHJlcXVpcmVkLiBXcm9uZyBldGhlcmV1bSBhZGRyZXNzOiAke2FyZ3NbMl19YDtcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgSVBGU19SRVFVSVJFRDpcbiAgICAgICAgICAgIG1lc3NhZ2UgPSAnSVBGUyBBUEkgcmVxdWlyZWQnO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSBJUEZTX05PVF9DT05ORUNURUQ6XG4gICAgICAgICAgICBtZXNzYWdlID0gJ05vIGNvbm5lY3Rpb24gdG8gSVBGUyBzZXJ2ZXInO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSBUUkFOU0FDVElPTl9VTlNVQ0NFU1NGVUw6XG4gICAgICAgICAgICBtZXNzYWdlID0gJ1RyYW5zYWN0aW9uIHdhcyB1bnN1Y2Nlc3NmdWwnO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSBGQUlMVVJFX0VWRU5UOlxuICAgICAgICAgICAgbWVzc2FnZSA9ICdDb250cmFjdCByZXR1cm5zIGFuIGZhaWx1cmUgZXZlbnQnO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgfVxuXG4gICAgY29uc3QgZXJyID0gbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgIGVyci5jb2RlID0gY29kZSB8fCAnVU5LTk9XTic7XG4gICAgZXJyLmFyZ3MgPSBhcmdzO1xuICAgIHJldHVybiBlcnI7XG59O1xuIl19