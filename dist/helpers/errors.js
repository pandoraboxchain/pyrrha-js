/**
 * Errors definition and helpers
 * This file it is a part of the Pandora Pyrrha Javascript library
 * 
 * @file errors.js
 * @author Kostiantyn Smyrnov <kostysh@gmail.com>
 * @date 2018
 */
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.TRANSACTION_UNSUCCESSFUL = exports.WEB3_METAMASK_REQUIRED = exports.IPFS_NOT_CONNECTED = exports.IPFS_REQUIRED = exports.ADDRESS_REQUIRED = exports.CONTRACT_REQUIRED = exports.WEB3_NOT_CONNECTED = exports.WEB3_REQUIRED = exports.OPTIONS_REQUIRED = void 0;
const OPTIONS_REQUIRED = 'OPTIONS_REQUIRED';
exports.OPTIONS_REQUIRED = OPTIONS_REQUIRED;
const WEB3_REQUIRED = 'WEB3_REQUIRED';
exports.WEB3_REQUIRED = WEB3_REQUIRED;
const WEB3_NOT_CONNECTED = 'WEB3_NOT_CONNECTED';
exports.WEB3_NOT_CONNECTED = WEB3_NOT_CONNECTED;
const CONTRACT_REQUIRED = 'CONTRACT_REQUIRED';
exports.CONTRACT_REQUIRED = CONTRACT_REQUIRED;
const ADDRESS_REQUIRED = 'ADDRESS_REQUIRED';
exports.ADDRESS_REQUIRED = ADDRESS_REQUIRED;
const IPFS_REQUIRED = 'IPFS_REQUIRED';
exports.IPFS_REQUIRED = IPFS_REQUIRED;
const IPFS_NOT_CONNECTED = 'IPFS_NOT_CONNECTED';
exports.IPFS_NOT_CONNECTED = IPFS_NOT_CONNECTED;
const WEB3_METAMASK_REQUIRED = 'WEB3_METAMASK_REQUIRED';
exports.WEB3_METAMASK_REQUIRED = WEB3_METAMASK_REQUIRED;
const TRANSACTION_UNSUCCESSFUL = 'TRANSACTION_UNSUCCESSFUL';
exports.TRANSACTION_UNSUCCESSFUL = TRANSACTION_UNSUCCESSFUL;

var _default = (code, ...args) => {
  let message = 'Unknown error';

  switch (code) {
    case OPTIONS_REQUIRED:
      message = 'Config options is required and expected to be an object';
      break;

    case WEB3_REQUIRED:
      message = 'Web3 API required';
      break;

    case WEB3_NOT_CONNECTED:
      message = 'Web3 not connected to provider';
      break;

    case WEB3_METAMASK_REQUIRED:
      message = 'MetaMask is required to perform this operation';
      break;

    case CONTRACT_REQUIRED:
      message = `Contract "${args[0]}" is required`;
      break;

    case ADDRESS_REQUIRED:
      message = `Address of "${args[0]}" contract is required`;
      break;

    case IPFS_REQUIRED:
      message = 'IPFS API required';
      break;

    case IPFS_NOT_CONNECTED:
      message = 'No connection to IPFS server';
      break;

    case TRANSACTION_UNSUCCESSFUL:
      message = 'Transaction was unsuccessful';
      break;
  }

  const err = new Error(message);
  err.code = code || 'UNKNOWN';
  return err;
};

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9oZWxwZXJzL2Vycm9ycy5qcyJdLCJuYW1lcyI6WyJPUFRJT05TX1JFUVVJUkVEIiwiV0VCM19SRVFVSVJFRCIsIldFQjNfTk9UX0NPTk5FQ1RFRCIsIkNPTlRSQUNUX1JFUVVJUkVEIiwiQUREUkVTU19SRVFVSVJFRCIsIklQRlNfUkVRVUlSRUQiLCJJUEZTX05PVF9DT05ORUNURUQiLCJXRUIzX01FVEFNQVNLX1JFUVVJUkVEIiwiVFJBTlNBQ1RJT05fVU5TVUNDRVNTRlVMIiwiY29kZSIsImFyZ3MiLCJtZXNzYWdlIiwiZXJyIiwiRXJyb3IiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7OztBQVNBOzs7Ozs7QUFFTyxNQUFNQSxtQkFBbUIsa0JBQXpCOztBQUNBLE1BQU1DLGdCQUFnQixlQUF0Qjs7QUFDQSxNQUFNQyxxQkFBcUIsb0JBQTNCOztBQUNBLE1BQU1DLG9CQUFvQixtQkFBMUI7O0FBQ0EsTUFBTUMsbUJBQW1CLGtCQUF6Qjs7QUFDQSxNQUFNQyxnQkFBZ0IsZUFBdEI7O0FBQ0EsTUFBTUMscUJBQXFCLG9CQUEzQjs7QUFDQSxNQUFNQyx5QkFBeUIsd0JBQS9COztBQUNBLE1BQU1DLDJCQUEyQiwwQkFBakM7OztlQUVRLENBQUNDLElBQUQsRUFBTyxHQUFHQyxJQUFWLEtBQW1CO0FBQzlCLE1BQUlDLFVBQVUsZUFBZDs7QUFFQSxVQUFRRixJQUFSO0FBQ0ksU0FBS1QsZ0JBQUw7QUFDSVcsZ0JBQVUseURBQVY7QUFDQTs7QUFFSixTQUFLVixhQUFMO0FBQ0lVLGdCQUFVLG1CQUFWO0FBQ0E7O0FBRUosU0FBS1Qsa0JBQUw7QUFDSVMsZ0JBQVUsZ0NBQVY7QUFDQTs7QUFFSixTQUFLSixzQkFBTDtBQUNJSSxnQkFBVSxnREFBVjtBQUNBOztBQUVKLFNBQUtSLGlCQUFMO0FBQ0lRLGdCQUFXLGFBQVlELEtBQUssQ0FBTCxDQUFRLGVBQS9CO0FBQ0E7O0FBRUosU0FBS04sZ0JBQUw7QUFDSU8sZ0JBQVcsZUFBY0QsS0FBSyxDQUFMLENBQVEsd0JBQWpDO0FBQ0E7O0FBRUosU0FBS0wsYUFBTDtBQUNJTSxnQkFBVSxtQkFBVjtBQUNBOztBQUVKLFNBQUtMLGtCQUFMO0FBQ0lLLGdCQUFVLDhCQUFWO0FBQ0E7O0FBRUosU0FBS0gsd0JBQUw7QUFDSUcsZ0JBQVUsOEJBQVY7QUFDQTtBQW5DUjs7QUFzQ0EsUUFBTUMsTUFBTSxJQUFJQyxLQUFKLENBQVVGLE9BQVYsQ0FBWjtBQUNBQyxNQUFJSCxJQUFKLEdBQVdBLFFBQVEsU0FBbkI7QUFDQSxTQUFPRyxHQUFQO0FBQ0gsQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRXJyb3JzIGRlZmluaXRpb24gYW5kIGhlbHBlcnNcbiAqIFRoaXMgZmlsZSBpdCBpcyBhIHBhcnQgb2YgdGhlIFBhbmRvcmEgUHlycmhhIEphdmFzY3JpcHQgbGlicmFyeVxuICogXG4gKiBAZmlsZSBlcnJvcnMuanNcbiAqIEBhdXRob3IgS29zdGlhbnR5biBTbXlybm92IDxrb3N0eXNoQGdtYWlsLmNvbT5cbiAqIEBkYXRlIDIwMThcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmV4cG9ydCBjb25zdCBPUFRJT05TX1JFUVVJUkVEID0gJ09QVElPTlNfUkVRVUlSRUQnO1xuZXhwb3J0IGNvbnN0IFdFQjNfUkVRVUlSRUQgPSAnV0VCM19SRVFVSVJFRCc7XG5leHBvcnQgY29uc3QgV0VCM19OT1RfQ09OTkVDVEVEID0gJ1dFQjNfTk9UX0NPTk5FQ1RFRCc7XG5leHBvcnQgY29uc3QgQ09OVFJBQ1RfUkVRVUlSRUQgPSAnQ09OVFJBQ1RfUkVRVUlSRUQnO1xuZXhwb3J0IGNvbnN0IEFERFJFU1NfUkVRVUlSRUQgPSAnQUREUkVTU19SRVFVSVJFRCc7XG5leHBvcnQgY29uc3QgSVBGU19SRVFVSVJFRCA9ICdJUEZTX1JFUVVJUkVEJztcbmV4cG9ydCBjb25zdCBJUEZTX05PVF9DT05ORUNURUQgPSAnSVBGU19OT1RfQ09OTkVDVEVEJztcbmV4cG9ydCBjb25zdCBXRUIzX01FVEFNQVNLX1JFUVVJUkVEID0gJ1dFQjNfTUVUQU1BU0tfUkVRVUlSRUQnO1xuZXhwb3J0IGNvbnN0IFRSQU5TQUNUSU9OX1VOU1VDQ0VTU0ZVTCA9ICdUUkFOU0FDVElPTl9VTlNVQ0NFU1NGVUwnO1xuXG5leHBvcnQgZGVmYXVsdCAoY29kZSwgLi4uYXJncykgPT4ge1xuICAgIGxldCBtZXNzYWdlID0gJ1Vua25vd24gZXJyb3InO1xuXG4gICAgc3dpdGNoIChjb2RlKSB7XG4gICAgICAgIGNhc2UgT1BUSU9OU19SRVFVSVJFRDpcbiAgICAgICAgICAgIG1lc3NhZ2UgPSAnQ29uZmlnIG9wdGlvbnMgaXMgcmVxdWlyZWQgYW5kIGV4cGVjdGVkIHRvIGJlIGFuIG9iamVjdCc7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlIFdFQjNfUkVRVUlSRUQ6XG4gICAgICAgICAgICBtZXNzYWdlID0gJ1dlYjMgQVBJIHJlcXVpcmVkJztcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgV0VCM19OT1RfQ09OTkVDVEVEOlxuICAgICAgICAgICAgbWVzc2FnZSA9ICdXZWIzIG5vdCBjb25uZWN0ZWQgdG8gcHJvdmlkZXInO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSBXRUIzX01FVEFNQVNLX1JFUVVJUkVEOlxuICAgICAgICAgICAgbWVzc2FnZSA9ICdNZXRhTWFzayBpcyByZXF1aXJlZCB0byBwZXJmb3JtIHRoaXMgb3BlcmF0aW9uJztcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgQ09OVFJBQ1RfUkVRVUlSRUQ6XG4gICAgICAgICAgICBtZXNzYWdlID0gYENvbnRyYWN0IFwiJHthcmdzWzBdfVwiIGlzIHJlcXVpcmVkYDtcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgQUREUkVTU19SRVFVSVJFRDpcbiAgICAgICAgICAgIG1lc3NhZ2UgPSBgQWRkcmVzcyBvZiBcIiR7YXJnc1swXX1cIiBjb250cmFjdCBpcyByZXF1aXJlZGA7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlIElQRlNfUkVRVUlSRUQ6XG4gICAgICAgICAgICBtZXNzYWdlID0gJ0lQRlMgQVBJIHJlcXVpcmVkJztcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgSVBGU19OT1RfQ09OTkVDVEVEOlxuICAgICAgICAgICAgbWVzc2FnZSA9ICdObyBjb25uZWN0aW9uIHRvIElQRlMgc2VydmVyJztcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgVFJBTlNBQ1RJT05fVU5TVUNDRVNTRlVMOlxuICAgICAgICAgICAgbWVzc2FnZSA9ICdUcmFuc2FjdGlvbiB3YXMgdW5zdWNjZXNzZnVsJztcbiAgICAgICAgICAgIGJyZWFrO1xuICAgIH1cblxuICAgIGNvbnN0IGVyciA9IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgICBlcnIuY29kZSA9IGNvZGUgfHwgJ1VOS05PV04nO1xuICAgIHJldHVybiBlcnI7XG59O1xuIl19